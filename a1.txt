import requests

def shorten_link(full_link, link_name):
    API_Key = "10c3164537cf076c83845ff0f6c74603c1397"
    Base_Url = "https://cutt.ly/api/api.php"
    
    payload = {'key': API_Key, 'short':full_link, 'name':link_name}
    request = requests.get(Base_Url, params=payload)
    data = request.json()
    print(' ')
    
    try:
        title = data['url']['title']
        shorten_link = data['url']['shortLink']
        
        print('Title:',title)
        print('Link:',shorten_link)
    
    except:
        status = data['url']['status']
        print("Error status:",status)
    
link = input("Enter a link:")
name = input("Enter a name:")

shorten_link(link,name)

----------------------------------------------------------------------------------------------------------------

import tkinter as tk
from tkinter import messagebox
import pyshorteners

def shorten_url():
    long_url = entry.get()
    try:
        s = pyshorteners.Shortener()
        short_url = s.tinyurl.short(long_url)
        result_label.config(text=f"Short URL: {short_url}")
    except Exception as e:
        messagebox.showerror("Error", f"An error occurred: {e}")

# Create the main window
window = tk.Tk()
window.title("URL Shortener")

# Create and pack widgets
label = tk.Label(window, text="Enter a URL to shorten:")
label.pack(pady=10)

entry = tk.Entry(window, width=40)
entry.pack()

shorten_button = tk.Button(window, text="Shorten", command=shorten_url)
shorten_button.pack(pady=10)

result_label = tk.Label(window, text="")
result_label.pack()

# Start the Tkinter event loop
window.mainloop()

--------------------------------------------------------------------------------------------------

import tkinter as tk
from tkinter import messagebox
from datetime import datetime, timedelta
import pyshorteners

# Function to shorten the URL with custom alias and expiration date
def shorten_url(url, custom_alias, expiration_date):
    try:
        s = pyshorteners.Shortener()
        
        if custom_alias:
            url += f"?alias={custom_alias}"
        
        if expiration_date:
            expiration_date = datetime.now() + timedelta(days=int(expiration_date))
            url += f"&expires={expiration_date.strftime('%Y-%m-%d')}"
        
        short_url = s.tinyurl.short(url)
        
        result_label.config(text=f"Short URL: {short_url}", fg="#3498db")
    except Exception as e:
        messagebox.showerror("Error", f"An error occurred: {e}")
        result_label.config(text="", fg="red")

# Create the main window
window = tk.Tk()
window.title("Custom URL Shortener")
window.geometry("400x350")
window.configure(bg="#2c3e50")

# Create and style widgets
label = tk.Label(window, text="Enter a URL to shorten:", fg="white", bg="#2c3e50", font=("Helvetica", 14))
label.pack(pady=10)

entry = tk.Entry(window, width=40, font=("Helvetica", 12))
entry.pack()

alias_label = tk.Label(window, text="Custom Alias (optional):", fg="white", bg="#2c3e50", font=("Helvetica", 14))
alias_label.pack()

alias_entry = tk.Entry(window, width=20, font=("Helvetica", 12))
alias_entry.pack()

expiration_label = tk.Label(window, text="Expiration Date (days, optional):", fg="white", bg="#2c3e50", font=("Helvetica", 14))
expiration_label.pack()

expiration_entry = tk.Entry(window, width=5, font=("Helvetica", 12))
expiration_entry.pack()

shorten_button = tk.Button(window, text="Shorten", command=lambda: shorten_url(entry.get(), alias_entry.get(), expiration_entry.get()), bg="#3498db", fg="white", font=("Helvetica", 12))
shorten_button.pack(pady=10)

result_label = tk.Label(window, text="", fg="#3498db", bg="#2c3e50", font=("Helvetica", 14))
result_label.pack()

# Start the Tkinter event loop
window.mainloop()